package com.citiustech.code;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class BMI {

public static double calculateBmi(Person p) {
double height=p.getHeight();
double weight=p.getWeight();

if(height<=0 || weight <=0)
	throw new BMIException("incorrect data");


double bmi=weight/(height*height);
return Math.round(bmi);
	}
	
public static boolean isDietingRecomended(Person p) {
	double bmi=calculateBmi(p);
	if(bmi<25)
		return false;
return true;
}

public static Person findPersonWithLowestBMI(List<Person> persons) {
	
	/*List list=new ArrayList<>();
	list.add(new Person(70,1.7));
	list.add(new Person(80,1.9));
	list.add(new Person(60,1.3));
	list.add(new Person(90,1.6));
*/
	
	if(!persons.isEmpty()) {
		return persons.stream().min(Comparator.comparing(BMI::calculateBmi)).get();
	}
	else {
		throw new BMIException("Person list cannot be empty");
	}
	
	
	
}
}


