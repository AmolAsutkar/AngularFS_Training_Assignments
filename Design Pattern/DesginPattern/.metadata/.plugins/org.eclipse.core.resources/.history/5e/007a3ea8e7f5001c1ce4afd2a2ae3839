package iteratorpattern;

class SimpleStack<V> {
	
	class Node{
		V value;
		Node below;
		
		Node(V value){
			this.value = value;
			below = top;
		}
	}
	
	private Node top;
	
	public void push(V item) {
		top = new Node(item);
	}
	
	public V pop() {
		V item = top.value;
		top = top.below;	
		return item;
	}
	
	public boolean empty() {
		return top == null;
	}
}

public class IteratorDesignPattern {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		SimpleStack<String> names = new SimpleStack<>();
		names.push("Jack");
		names.push("Jill");
		names.push("John");
		names.push("Jeff");
		while(!names.empty())
			System.out.println(names.pop());
	}

}
